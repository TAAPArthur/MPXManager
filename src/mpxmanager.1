.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.16.
.TH MPXMANAGER.SH "1" "October 2020" "mpxmanager.sh 1.2.0" "User Commands"
.SH NAME
mpxmanager.sh \- manual page for mpxmanager.sh 1.2.0
.SH SYNOPSIS
.B mpxmanager.sh
[\fI\,ACTION\/\fR]
.SH DESCRIPTION
MPX aware window manager
.SS "Action:"
.TP
\fB\-\-hash\fR
Displays git hash
.TP
\fB\-\-help\fR, \fB\-h\fR
Print this help
.TP
\fB\-\-mode\fR, \fB\-m\fR
run with a predefined settings. Valid options are: xmousecontrol
.TP
\fB\-\-name\fR
Name of executable
.TP
\fB\-\-path\fR
Path to the config file
.TP
\fB\-\-quit\fR
Exists a running instance
.TP
\fB\-\-recompile\fR
Recompile with program. Needed for changes to config to be loaded
.TP
\fB\-\-restart\fR
Restart the program
.TP
\fB\-\-send=\fR<name=value>, \fB\-s\fR
send argument(s) to running instance (can be called multiple times)
.TP
\fB\-\-set=\fR<name=value>
set argument(s) for new instances (can be called multiple times)
.TP
\fB\-v\fR, \fB\-\-version\fR
Print script information
.PP
Modes:
Each mode is a non\-WM feature
.IP
xmousecontrol enables control of the mouse with the keyboard
mpx\-start   loads mpx config file, creates masters and attaches slaves to the appropriate masters
mpx\-stop    removes all non\-default masters
mpx\-restart mpx\-stop and mpx\-start
mpx\-restore   Like mpx\-start but does not create any new masters
mpx\-split   takes all slaves that are sending events and add them to a newly created master. To make the timeout longer, change the value of POLL_COUNT/POLL_INTERVAL via \fB\-\-set\fR
.IP
EXIT STATUS
.IP
The following exit values shall be returned:
.TP
0
Successful completion.
.TP
1
Display related error liking not being able to find the XServer or an X command failing
.TP
64
System call failed
.TP
65
Another WM is already running
.TP
66
WM is not responding to a request
.TP
67
An invalid option was specified
.TP
68
Validation failed
.SH EXAMPLES
.TP
mpxmanager.sh
#start the window manager
.TP
mpxmanager.sh \-\-set="VAR=VALUE"
#start the window manager and set VAR to VALUE
.TP
mpxmanager.sh \-\-send="VAR=VALUE"
#set VAR to VALUE for a running instance
.PP
Usage: ${SCRIPT_NAME} [ACTION]
MPX aware window manager
.SS "Action:"
.TP
\-\-hash
Displays git hash
.TP
\-\-help, \-h
Print this help
.TP
\-\-mode, \-m
run with a predefined settings. Valid options are: xmousecontrol
.TP
\-\-name
Name of executable
.TP
\-\-path
Path to the config file
.TP
\-\-quit
Exists a running instance
.TP
\-\-recompile
Recompile with program. Needed for changes to config to be loaded
.TP
\-\-restart
Restart the program
.TP
\-\-send=<name=value>, \-s
send argument(s) to running instance (can be called multiple times)
.TP
\-\-set=<name=value>
set argument(s) for new instances (can be called multiple times)
.TP
\-v, \-\-version
Print script information
.PP
Modes:
Each mode is a non\-WM feature
.IP
xmousecontrol enables control of the mouse with the keyboard
mpx\-start   loads mpx config file, creates masters and attaches slaves to the appropriate masters
mpx\-stop    removes all non\-default masters
mpx\-restart mpx\-stop and mpx\-start
mpx\-restore   Like mpx\-start but does not create any new masters
mpx\-split   takes all slaves that are sending events and add them to a newly created master. To make the timeout longer, change the value of POLL_COUNT/POLL_INTERVAL via \-\-set
.IP
EXIT STATUS
.IP
The following exit values shall be returned:
.TP
0
Successful completion.
.TP
1
Display related error liking not being able to find the XServer or an X command failing
.TP
64
System call failed
.TP
65
Another WM is already running
.TP
66
WM is not responding to a request
.TP
67
An invalid option was specified
.TP
68
Validation failed
.TP
${SCRIPT_NAME}
#start the window manager
.TP
${SCRIPT_NAME} \-\-set="VAR=VALUE"
#start the window manager and set VAR to VALUE
.TP
${SCRIPT_NAME} \-\-send="VAR=VALUE"
#set VAR to VALUE for a running instance
