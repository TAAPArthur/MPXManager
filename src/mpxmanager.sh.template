#!/bin/sh -e
#================================================================
# HEADER
#================================================================
#%Usage: ${SCRIPT_NAME} [ACTION]
#%MPX aware window manager
#%
#%
#%Action:
#%    --hash                        Displays git hash
#%    --help, -h                    Print this help
#%    --mode, -m                    run with a predefined settings. Valid options are: xmousecontrol
#%    --name                        Name of executable
#%    --path                        Path to the config file
#%    --quit                        Exists a running instance
#%    --recompile                   Recompile with program. Needed for changes to config to be loaded
#%    --restart                     Restart the program
#%    --send=<name=value>, -s       send argument(s) to running instance (can be called multiple times)
#%    --set=<name=value>            set argument(s) for new instances (can be called multiple times)
#%    -v, --version                 Print script information
#%
#%Modes:
#%Each mode is a non-WM feature
#%      xmousecontrol enables control of the mouse with the keyboard
#%      mpx-start   loads mpx config file, creates masters and attaches slaves to the appropriate masters
#%      mpx-stop    removes all non-default masters
#%      mpx-restart mpx-stop and mpx-start
#%      mpx-restore   Like mpx-start but does not create any new masters
#%      mpx-split   takes all slaves that are sending events and add them to a newly created master. To make the timeout longer, change the value of POLL_COUNT/POLL_INTERVAL via --set
#%
#% EXIT STATUS
#%       The following exit values shall be returned:
#%
#%               0     Successful completion.
#%               1     Display related error liking not being able to find the XServer or an X command failing
#%               64    System call failed
#%               65    Another WM is already running
#%               66    WM is not responding to a request
#%               67    An invalid option was specified
#%               68    Validation failed
#%
#%Examples:
#%    ${SCRIPT_NAME}              #start the window manager
#%    ${SCRIPT_NAME} --set="VAR=VALUE"             #start the window manager and set VAR to VALUE
#%    ${SCRIPT_NAME} --send="VAR=VALUE"             #set VAR to VALUE for a running instance
#%
#================================================================
#- IMPLEMENTATION
#-    version         ${SCRIPT_NAME} (taaparthur.no-ip.org) ${VERSION}
#-    author          Arthur Williams
#-    license         MIT
#================================================================
# END_OF_HEADER
#================================================================
#MAN generated with help2man -No mpxmanager.1 ./mpxmanager.sh

VERSION=
GIT_HASH=
MPXMANAGER_BIN_NAME=${MPXMANAGER_BIN_NAME:-mpxmanager}
MPXMANAGER_BIN_DIR=${MPXMANAGER_BIN_DIR:-${XDG_DATA_DIR:-$HOME/.local/share}}/mpxmanager
MPXMANAGER_HOME=${MPXMANAGER_HOME:-${XDG_CONFIG_HOME:-$HOME/.config}}/mpxmanager

displayHelp(){
    SCRIPT_HEADSIZE=$(head -200 "$0" |grep -n "^# END_OF_HEADER" | cut -f1 -d:)
    SCRIPT_NAME="$(basename "$0")"
    head "-${SCRIPT_HEADSIZE:-99}" "$0" | grep -e "^#[%+]" | sed -e "s/^#[%+-]//g" -e "s/\${SCRIPT_NAME}/${SCRIPT_NAME}/g" ;
    head "-${SCRIPT_HEADSIZE:-99}" "$0" | grep -e "^#[%+]" | sed -e "s/^#[%+-]//g" -e "s/\${VERSION}/${VERSION} ${GIT_HASH}/g" ;
}

recompile() {
    if [ ! -d "$MPXMANAGER_HOME" ]; then
        mkdir -p "$MPXMANAGER_HOME"
        cp /usr/share/mpxmanager/sample-config.c "$MPXMANAGER_HOME/config.c"
    fi
    mkdir -p "$MPXMANAGER_BIN_DIR"
    export LDFLAGS=${LDFLAGS:-__place__holder}
    # shellcheck disable=SC2086
    ${CC:-cc} "$MPXMANAGER_HOME"/*.c -o "$MPXMANAGER_BIN_DIR/$MPXMANAGER_BIN_NAME" $CFLAGS $LDFLAGS -lmpxmanager "$@"
}
run(){
    [ -x "$MPXMANAGER_BIN_DIR/$MPXMANAGER_BIN_NAME" ] || recompile
    exec "$MPXMANAGER_BIN_DIR/$MPXMANAGER_BIN_NAME" "$@"
}
displayVersion(){
    echo "$VERSION"
}
displayHash(){
    echo "$GIT_HASH"
}

case "$1" in
    --hash)
        displayHash
        ;;
    -h|--help)
        displayHelp
        ;;
    --name)
        echo "$MPXMANAGER_BIN_NAME"
        ;;
    --path)
        echo "$MPXMANAGER_HOME"
        ;;
    -r|--recompile)
        shift
        recompile "$@"
        ;;
    -v|--version)
        displayVersion
        ;;
    *)
        run "$@"
        ;;
esac
